// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: dagvm/dagvm.proto

package dagvm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitializeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId    uint32               `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	SubnetId     []byte               `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	ChainId      []byte               `protobuf:"bytes,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	NodeId       []byte               `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XChainId     []byte               `protobuf:"bytes,5,opt,name=x_chain_id,json=xChainId,proto3" json:"x_chain_id,omitempty"`
	AvaxAssetId  []byte               `protobuf:"bytes,6,opt,name=avax_asset_id,json=avaxAssetId,proto3" json:"avax_asset_id,omitempty"`
	GenesisBytes []byte               `protobuf:"bytes,7,opt,name=genesis_bytes,json=genesisBytes,proto3" json:"genesis_bytes,omitempty"`
	UpgradeBytes []byte               `protobuf:"bytes,8,opt,name=upgrade_bytes,json=upgradeBytes,proto3" json:"upgrade_bytes,omitempty"`
	ConfigBytes  []byte               `protobuf:"bytes,9,opt,name=config_bytes,json=configBytes,proto3" json:"config_bytes,omitempty"`
	DbServers    []*VersionedDBServer `protobuf:"bytes,10,rep,name=db_servers,json=dbServers,proto3" json:"db_servers,omitempty"`
	// server_addr is the address of the gRPC server which serves
	// the messenger, keystore, shared memory, blockchain alias,
	// subnet alias, and appSender services
	ServerAddr string `protobuf:"bytes,20,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{0}
}

func (x *InitializeRequest) GetNetworkId() uint32 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *InitializeRequest) GetSubnetId() []byte {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

func (x *InitializeRequest) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *InitializeRequest) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *InitializeRequest) GetXChainId() []byte {
	if x != nil {
		return x.XChainId
	}
	return nil
}

func (x *InitializeRequest) GetAvaxAssetId() []byte {
	if x != nil {
		return x.AvaxAssetId
	}
	return nil
}

func (x *InitializeRequest) GetGenesisBytes() []byte {
	if x != nil {
		return x.GenesisBytes
	}
	return nil
}

func (x *InitializeRequest) GetUpgradeBytes() []byte {
	if x != nil {
		return x.UpgradeBytes
	}
	return nil
}

func (x *InitializeRequest) GetConfigBytes() []byte {
	if x != nil {
		return x.ConfigBytes
	}
	return nil
}

func (x *InitializeRequest) GetDbServers() []*VersionedDBServer {
	if x != nil {
		return x.DbServers
	}
	return nil
}

func (x *InitializeRequest) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

type VersionedDBServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// server_addr is the address of the gRPC server which serves the
	// Database service
	ServerAddr string `protobuf:"bytes,3,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
}

func (x *VersionedDBServer) Reset() {
	*x = VersionedDBServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionedDBServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionedDBServer) ProtoMessage() {}

func (x *VersionedDBServer) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionedDBServer.ProtoReflect.Descriptor instead.
func (*VersionedDBServer) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{1}
}

func (x *VersionedDBServer) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionedDBServer) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

type SetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State uint32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SetStateRequest) Reset() {
	*x = SetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest) ProtoMessage() {}

func (x *SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest.ProtoReflect.Descriptor instead.
func (*SetStateRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{2}
}

func (x *SetStateRequest) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type CreateHandlersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handlers []*Handler `protobuf:"bytes,1,rep,name=handlers,proto3" json:"handlers,omitempty"`
}

func (x *CreateHandlersResponse) Reset() {
	*x = CreateHandlersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHandlersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHandlersResponse) ProtoMessage() {}

func (x *CreateHandlersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHandlersResponse.ProtoReflect.Descriptor instead.
func (*CreateHandlersResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{3}
}

func (x *CreateHandlersResponse) GetHandlers() []*Handler {
	if x != nil {
		return x.Handlers
	}
	return nil
}

type CreateStaticHandlersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handlers []*Handler `protobuf:"bytes,1,rep,name=handlers,proto3" json:"handlers,omitempty"`
}

func (x *CreateStaticHandlersResponse) Reset() {
	*x = CreateStaticHandlersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaticHandlersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaticHandlersResponse) ProtoMessage() {}

func (x *CreateStaticHandlersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaticHandlersResponse.ProtoReflect.Descriptor instead.
func (*CreateStaticHandlersResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{4}
}

func (x *CreateStaticHandlersResponse) GetHandlers() []*Handler {
	if x != nil {
		return x.Handlers
	}
	return nil
}

type Handler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix      string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	LockOptions uint32 `protobuf:"varint,2,opt,name=lock_options,json=lockOptions,proto3" json:"lock_options,omitempty"`
	// server_addr is the address of the gRPC server which serves the
	// HTTP service
	ServerAddr string `protobuf:"bytes,4,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
}

func (x *Handler) Reset() {
	*x = Handler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handler) ProtoMessage() {}

func (x *Handler) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handler.ProtoReflect.Descriptor instead.
func (*Handler) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{5}
}

func (x *Handler) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Handler) GetLockOptions() uint32 {
	if x != nil {
		return x.LockOptions
	}
	return 0
}

func (x *Handler) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []byte `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{6}
}

func (x *HealthResponse) GetDetails() []byte {
	if x != nil {
		return x.Details
	}
	return nil
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{7}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type AppRequestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The node that sent us this request
	NodeId []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// The ID of this request
	RequestId uint32 `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// deadline for this request
	Deadline *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// The request body
	Request []byte `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *AppRequestMsg) Reset() {
	*x = AppRequestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRequestMsg) ProtoMessage() {}

func (x *AppRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRequestMsg.ProtoReflect.Descriptor instead.
func (*AppRequestMsg) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{8}
}

func (x *AppRequestMsg) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *AppRequestMsg) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *AppRequestMsg) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *AppRequestMsg) GetRequest() []byte {
	if x != nil {
		return x.Request
	}
	return nil
}

type AppRequestFailedMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The node that we failed to get a response from
	NodeId []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// The ID of the request we sent and didn't get a response to
	RequestId uint32 `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *AppRequestFailedMsg) Reset() {
	*x = AppRequestFailedMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRequestFailedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRequestFailedMsg) ProtoMessage() {}

func (x *AppRequestFailedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRequestFailedMsg.ProtoReflect.Descriptor instead.
func (*AppRequestFailedMsg) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{9}
}

func (x *AppRequestFailedMsg) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *AppRequestFailedMsg) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type AppResponseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The node that we got a response from
	NodeId []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Request ID of request that this is in response to
	RequestId uint32 `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The response body
	Response []byte `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *AppResponseMsg) Reset() {
	*x = AppResponseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppResponseMsg) ProtoMessage() {}

func (x *AppResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppResponseMsg.ProtoReflect.Descriptor instead.
func (*AppResponseMsg) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{10}
}

func (x *AppResponseMsg) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *AppResponseMsg) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *AppResponseMsg) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

type AppGossipMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The node that sent us a gossip message
	NodeId []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// The message body
	Msg []byte `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AppGossipMsg) Reset() {
	*x = AppGossipMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppGossipMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppGossipMsg) ProtoMessage() {}

func (x *AppGossipMsg) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppGossipMsg.ProtoReflect.Descriptor instead.
func (*AppGossipMsg) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{11}
}

func (x *AppGossipMsg) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *AppGossipMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type ConnectedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ConnectedRequest) Reset() {
	*x = ConnectedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedRequest) ProtoMessage() {}

func (x *ConnectedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedRequest.ProtoReflect.Descriptor instead.
func (*ConnectedRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{12}
}

func (x *ConnectedRequest) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *ConnectedRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DisconnectedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *DisconnectedRequest) Reset() {
	*x = DisconnectedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectedRequest) ProtoMessage() {}

func (x *DisconnectedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectedRequest.ProtoReflect.Descriptor instead.
func (*DisconnectedRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{13}
}

func (x *DisconnectedRequest) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type GetTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTxRequest) Reset() {
	*x = GetTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxRequest) ProtoMessage() {}

func (x *GetTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxRequest.ProtoReflect.Descriptor instead.
func (*GetTxRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{14}
}

func (x *GetTxRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Bytes  []byte `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Status uint32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	// used to propagate database.ErrNotFound through RPC
	Err uint32 `protobuf:"varint,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetTxResponse) Reset() {
	*x = GetTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxResponse) ProtoMessage() {}

func (x *GetTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxResponse.ProtoReflect.Descriptor instead.
func (*GetTxResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{15}
}

func (x *GetTxResponse) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetTxResponse) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *GetTxResponse) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetTxResponse) GetErr() uint32 {
	if x != nil {
		return x.Err
	}
	return 0
}

type PendingTxsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*GetTxResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *PendingTxsResponse) Reset() {
	*x = PendingTxsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingTxsResponse) ProtoMessage() {}

func (x *PendingTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingTxsResponse.ProtoReflect.Descriptor instead.
func (*PendingTxsResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{16}
}

func (x *PendingTxsResponse) GetResponse() []*GetTxResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type ParseTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx []byte `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *ParseTxRequest) Reset() {
	*x = ParseTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTxRequest) ProtoMessage() {}

func (x *ParseTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTxRequest.ProtoReflect.Descriptor instead.
func (*ParseTxRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{17}
}

func (x *ParseTxRequest) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

type ParseTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       []byte         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Response *GetTxResponse `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ParseTxResponse) Reset() {
	*x = ParseTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTxResponse) ProtoMessage() {}

func (x *ParseTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTxResponse.ProtoReflect.Descriptor instead.
func (*ParseTxResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{18}
}

func (x *ParseTxResponse) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ParseTxResponse) GetResponse() *GetTxResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type TxAcceptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TxAcceptRequest) Reset() {
	*x = TxAcceptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxAcceptRequest) ProtoMessage() {}

func (x *TxAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxAcceptRequest.ProtoReflect.Descriptor instead.
func (*TxAcceptRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{19}
}

func (x *TxAcceptRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type TxRejectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TxRejectRequest) Reset() {
	*x = TxRejectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRejectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRejectRequest) ProtoMessage() {}

func (x *TxRejectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRejectRequest.ProtoReflect.Descriptor instead.
func (*TxRejectRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{20}
}

func (x *TxRejectRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type TxVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TxVerifyRequest) Reset() {
	*x = TxVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxVerifyRequest) ProtoMessage() {}

func (x *TxVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxVerifyRequest.ProtoReflect.Descriptor instead.
func (*TxVerifyRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{21}
}

func (x *TxVerifyRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type TxDependenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TxDependenciesRequest) Reset() {
	*x = TxDependenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxDependenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxDependenciesRequest) ProtoMessage() {}

func (x *TxDependenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxDependenciesRequest.ProtoReflect.Descriptor instead.
func (*TxDependenciesRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{22}
}

func (x *TxDependenciesRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type TxDependenciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*GetTxResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *TxDependenciesResponse) Reset() {
	*x = TxDependenciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxDependenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxDependenciesResponse) ProtoMessage() {}

func (x *TxDependenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxDependenciesResponse.ProtoReflect.Descriptor instead.
func (*TxDependenciesResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{23}
}

func (x *TxDependenciesResponse) GetResponse() []*GetTxResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type TxWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TxWhitelistRequest) Reset() {
	*x = TxWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxWhitelistRequest) ProtoMessage() {}

func (x *TxWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxWhitelistRequest.ProtoReflect.Descriptor instead.
func (*TxWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{24}
}

func (x *TxWhitelistRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type TxWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id [][]byte `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *TxWhitelistResponse) Reset() {
	*x = TxWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxWhitelistResponse) ProtoMessage() {}

func (x *TxWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxWhitelistResponse.ProtoReflect.Descriptor instead.
func (*TxWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{25}
}

func (x *TxWhitelistResponse) GetId() [][]byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type TxHasWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TxHasWhitelistRequest) Reset() {
	*x = TxHasWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxHasWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxHasWhitelistRequest) ProtoMessage() {}

func (x *TxHasWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxHasWhitelistRequest.ProtoReflect.Descriptor instead.
func (*TxHasWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{26}
}

func (x *TxHasWhitelistRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type TxHasWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has bool `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
}

func (x *TxHasWhitelistResponse) Reset() {
	*x = TxHasWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxHasWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxHasWhitelistResponse) ProtoMessage() {}

func (x *TxHasWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxHasWhitelistResponse.ProtoReflect.Descriptor instead.
func (*TxHasWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{27}
}

func (x *TxHasWhitelistResponse) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type TxInputIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TxInputIDsRequest) Reset() {
	*x = TxInputIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInputIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInputIDsRequest) ProtoMessage() {}

func (x *TxInputIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInputIDsRequest.ProtoReflect.Descriptor instead.
func (*TxInputIDsRequest) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{28}
}

func (x *TxInputIDsRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type TxInputIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id [][]byte `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *TxInputIDsResponse) Reset() {
	*x = TxInputIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dagvm_dagvm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInputIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInputIDsResponse) ProtoMessage() {}

func (x *TxInputIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dagvm_dagvm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInputIDsResponse.ProtoReflect.Descriptor instead.
func (*TxInputIDsResponse) Descriptor() ([]byte, []int) {
	return file_dagvm_dagvm_proto_rawDescGZIP(), []int{29}
}

func (x *TxInputIDsResponse) GetId() [][]byte {
	if x != nil {
		return x.Id
	}
	return nil
}

var File_dagvm_dagvm_proto protoreflect.FileDescriptor

var file_dagvm_dagvm_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2f, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x03, 0x0a, 0x11, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x0a, 0x78, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x78, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x61, 0x76, 0x61, 0x78, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x78, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x37, 0x0a,
	0x0a, 0x64, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x64, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x64, 0x62, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x4a, 0x04, 0x08, 0x0b, 0x10, 0x14, 0x22, 0x54, 0x0a,
	0x11, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x22, 0x27, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x44, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x22, 0x4a, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x22, 0x6b,
	0x0a, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x2a, 0x0a, 0x0e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x4d, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x64, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x73, 0x73,
	0x69, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x45, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x46, 0x0a, 0x12, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x20, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x74, 0x78, 0x22, 0x53, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x54, 0x78, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x54, 0x78,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a,
	0x0f, 0x54, 0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x27, 0x0a, 0x15, 0x54, 0x78, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x54, 0x78, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x54, 0x78, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x54,
	0x78, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x54, 0x78, 0x48, 0x61, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x16, 0x54,
	0x78, 0x48, 0x61, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x68, 0x61, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x78, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12,
	0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x32, 0xd9, 0x0b, 0x0a, 0x05, 0x44, 0x41, 0x47, 0x56, 0x4d, 0x12, 0x3e, 0x0a, 0x0a,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x2e, 0x64, 0x61, 0x67,
	0x76, 0x6d, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x08,
	0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d,
	0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x08, 0x53, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d,
	0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e,
	0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12,
	0x17, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x42, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x12, 0x1a, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d,
	0x2e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0b,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x2e, 0x64, 0x61,
	0x67, 0x76, 0x6d, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x41, 0x70,
	0x70, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e,
	0x41, 0x70, 0x70, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x54, 0x78, 0x12, 0x13, 0x2e,
	0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x78, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19,
	0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x78,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x54, 0x78, 0x12, 0x15, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x61,
	0x67, 0x76, 0x6d, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x54, 0x78, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12,
	0x16, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x54, 0x78, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x3a, 0x0a, 0x08, 0x54, 0x78, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x64, 0x61,
	0x67, 0x76, 0x6d, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x08, 0x54,
	0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x16, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e,
	0x54, 0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x0e, 0x54, 0x78, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x61, 0x67, 0x76,
	0x6d, 0x2e, 0x54, 0x78, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e,
	0x54, 0x78, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x54, 0x78, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x54, 0x78,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x54, 0x78, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e,
	0x54, 0x78, 0x48, 0x61, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x54, 0x78, 0x48, 0x61, 0x73, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64,
	0x61, 0x67, 0x76, 0x6d, 0x2e, 0x54, 0x78, 0x48, 0x61, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x54,
	0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x44, 0x73, 0x12, 0x18, 0x2e, 0x64, 0x61, 0x67, 0x76,
	0x6d, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x61, 0x67, 0x76, 0x6d, 0x2e, 0x54, 0x78, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30,
	0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x76, 0x61,
	0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x61, 0x76, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x67,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x61, 0x67, 0x76, 0x6d,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dagvm_dagvm_proto_rawDescOnce sync.Once
	file_dagvm_dagvm_proto_rawDescData = file_dagvm_dagvm_proto_rawDesc
)

func file_dagvm_dagvm_proto_rawDescGZIP() []byte {
	file_dagvm_dagvm_proto_rawDescOnce.Do(func() {
		file_dagvm_dagvm_proto_rawDescData = protoimpl.X.CompressGZIP(file_dagvm_dagvm_proto_rawDescData)
	})
	return file_dagvm_dagvm_proto_rawDescData
}

var file_dagvm_dagvm_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_dagvm_dagvm_proto_goTypes = []interface{}{
	(*InitializeRequest)(nil),            // 0: dagvm.InitializeRequest
	(*VersionedDBServer)(nil),            // 1: dagvm.VersionedDBServer
	(*SetStateRequest)(nil),              // 2: dagvm.SetStateRequest
	(*CreateHandlersResponse)(nil),       // 3: dagvm.CreateHandlersResponse
	(*CreateStaticHandlersResponse)(nil), // 4: dagvm.CreateStaticHandlersResponse
	(*Handler)(nil),                      // 5: dagvm.Handler
	(*HealthResponse)(nil),               // 6: dagvm.HealthResponse
	(*VersionResponse)(nil),              // 7: dagvm.VersionResponse
	(*AppRequestMsg)(nil),                // 8: dagvm.AppRequestMsg
	(*AppRequestFailedMsg)(nil),          // 9: dagvm.AppRequestFailedMsg
	(*AppResponseMsg)(nil),               // 10: dagvm.AppResponseMsg
	(*AppGossipMsg)(nil),                 // 11: dagvm.AppGossipMsg
	(*ConnectedRequest)(nil),             // 12: dagvm.ConnectedRequest
	(*DisconnectedRequest)(nil),          // 13: dagvm.DisconnectedRequest
	(*GetTxRequest)(nil),                 // 14: dagvm.GetTxRequest
	(*GetTxResponse)(nil),                // 15: dagvm.GetTxResponse
	(*PendingTxsResponse)(nil),           // 16: dagvm.PendingTxsResponse
	(*ParseTxRequest)(nil),               // 17: dagvm.ParseTxRequest
	(*ParseTxResponse)(nil),              // 18: dagvm.ParseTxResponse
	(*TxAcceptRequest)(nil),              // 19: dagvm.TxAcceptRequest
	(*TxRejectRequest)(nil),              // 20: dagvm.TxRejectRequest
	(*TxVerifyRequest)(nil),              // 21: dagvm.TxVerifyRequest
	(*TxDependenciesRequest)(nil),        // 22: dagvm.TxDependenciesRequest
	(*TxDependenciesResponse)(nil),       // 23: dagvm.TxDependenciesResponse
	(*TxWhitelistRequest)(nil),           // 24: dagvm.TxWhitelistRequest
	(*TxWhitelistResponse)(nil),          // 25: dagvm.TxWhitelistResponse
	(*TxHasWhitelistRequest)(nil),        // 26: dagvm.TxHasWhitelistRequest
	(*TxHasWhitelistResponse)(nil),       // 27: dagvm.TxHasWhitelistResponse
	(*TxInputIDsRequest)(nil),            // 28: dagvm.TxInputIDsRequest
	(*TxInputIDsResponse)(nil),           // 29: dagvm.TxInputIDsResponse
	(*timestamppb.Timestamp)(nil),        // 30: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                // 31: google.protobuf.Empty
}
var file_dagvm_dagvm_proto_depIdxs = []int32{
	1,  // 0: dagvm.InitializeRequest.db_servers:type_name -> dagvm.VersionedDBServer
	5,  // 1: dagvm.CreateHandlersResponse.handlers:type_name -> dagvm.Handler
	5,  // 2: dagvm.CreateStaticHandlersResponse.handlers:type_name -> dagvm.Handler
	30, // 3: dagvm.AppRequestMsg.deadline:type_name -> google.protobuf.Timestamp
	15, // 4: dagvm.PendingTxsResponse.response:type_name -> dagvm.GetTxResponse
	15, // 5: dagvm.ParseTxResponse.response:type_name -> dagvm.GetTxResponse
	15, // 6: dagvm.TxDependenciesResponse.response:type_name -> dagvm.GetTxResponse
	0,  // 7: dagvm.DAGVM.Initialize:input_type -> dagvm.InitializeRequest
	2,  // 8: dagvm.DAGVM.SetState:input_type -> dagvm.SetStateRequest
	31, // 9: dagvm.DAGVM.Shutdown:input_type -> google.protobuf.Empty
	31, // 10: dagvm.DAGVM.CreateHandlers:input_type -> google.protobuf.Empty
	31, // 11: dagvm.DAGVM.CreateStaticHandlers:input_type -> google.protobuf.Empty
	12, // 12: dagvm.DAGVM.Connected:input_type -> dagvm.ConnectedRequest
	13, // 13: dagvm.DAGVM.Disconnected:input_type -> dagvm.DisconnectedRequest
	31, // 14: dagvm.DAGVM.Health:input_type -> google.protobuf.Empty
	31, // 15: dagvm.DAGVM.Version:input_type -> google.protobuf.Empty
	8,  // 16: dagvm.DAGVM.AppRequest:input_type -> dagvm.AppRequestMsg
	9,  // 17: dagvm.DAGVM.AppRequestFailed:input_type -> dagvm.AppRequestFailedMsg
	10, // 18: dagvm.DAGVM.AppResponse:input_type -> dagvm.AppResponseMsg
	11, // 19: dagvm.DAGVM.AppGossip:input_type -> dagvm.AppGossipMsg
	14, // 20: dagvm.DAGVM.GetTx:input_type -> dagvm.GetTxRequest
	31, // 21: dagvm.DAGVM.PendingTxs:input_type -> google.protobuf.Empty
	17, // 22: dagvm.DAGVM.ParseTx:input_type -> dagvm.ParseTxRequest
	19, // 23: dagvm.DAGVM.TxAccept:input_type -> dagvm.TxAcceptRequest
	20, // 24: dagvm.DAGVM.TxReject:input_type -> dagvm.TxRejectRequest
	21, // 25: dagvm.DAGVM.TxVerify:input_type -> dagvm.TxVerifyRequest
	22, // 26: dagvm.DAGVM.TxDependencies:input_type -> dagvm.TxDependenciesRequest
	24, // 27: dagvm.DAGVM.TxWhitelist:input_type -> dagvm.TxWhitelistRequest
	26, // 28: dagvm.DAGVM.TxHasWhitelist:input_type -> dagvm.TxHasWhitelistRequest
	28, // 29: dagvm.DAGVM.TxInputIDs:input_type -> dagvm.TxInputIDsRequest
	31, // 30: dagvm.DAGVM.Initialize:output_type -> google.protobuf.Empty
	31, // 31: dagvm.DAGVM.SetState:output_type -> google.protobuf.Empty
	31, // 32: dagvm.DAGVM.Shutdown:output_type -> google.protobuf.Empty
	3,  // 33: dagvm.DAGVM.CreateHandlers:output_type -> dagvm.CreateHandlersResponse
	4,  // 34: dagvm.DAGVM.CreateStaticHandlers:output_type -> dagvm.CreateStaticHandlersResponse
	31, // 35: dagvm.DAGVM.Connected:output_type -> google.protobuf.Empty
	31, // 36: dagvm.DAGVM.Disconnected:output_type -> google.protobuf.Empty
	6,  // 37: dagvm.DAGVM.Health:output_type -> dagvm.HealthResponse
	7,  // 38: dagvm.DAGVM.Version:output_type -> dagvm.VersionResponse
	31, // 39: dagvm.DAGVM.AppRequest:output_type -> google.protobuf.Empty
	31, // 40: dagvm.DAGVM.AppRequestFailed:output_type -> google.protobuf.Empty
	31, // 41: dagvm.DAGVM.AppResponse:output_type -> google.protobuf.Empty
	31, // 42: dagvm.DAGVM.AppGossip:output_type -> google.protobuf.Empty
	15, // 43: dagvm.DAGVM.GetTx:output_type -> dagvm.GetTxResponse
	16, // 44: dagvm.DAGVM.PendingTxs:output_type -> dagvm.PendingTxsResponse
	18, // 45: dagvm.DAGVM.ParseTx:output_type -> dagvm.ParseTxResponse
	31, // 46: dagvm.DAGVM.TxAccept:output_type -> google.protobuf.Empty
	31, // 47: dagvm.DAGVM.TxReject:output_type -> google.protobuf.Empty
	31, // 48: dagvm.DAGVM.TxVerify:output_type -> google.protobuf.Empty
	23, // 49: dagvm.DAGVM.TxDependencies:output_type -> dagvm.TxDependenciesResponse
	25, // 50: dagvm.DAGVM.TxWhitelist:output_type -> dagvm.TxWhitelistResponse
	27, // 51: dagvm.DAGVM.TxHasWhitelist:output_type -> dagvm.TxHasWhitelistResponse
	29, // 52: dagvm.DAGVM.TxInputIDs:output_type -> dagvm.TxInputIDsResponse
	30, // [30:53] is the sub-list for method output_type
	7,  // [7:30] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_dagvm_dagvm_proto_init() }
func file_dagvm_dagvm_proto_init() {
	if File_dagvm_dagvm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dagvm_dagvm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionedDBServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHandlersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaticHandlersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppRequestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppRequestFailedMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppResponseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppGossipMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingTxsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxAcceptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRejectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxDependenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxDependenciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxHasWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxHasWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInputIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dagvm_dagvm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInputIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dagvm_dagvm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dagvm_dagvm_proto_goTypes,
		DependencyIndexes: file_dagvm_dagvm_proto_depIdxs,
		MessageInfos:      file_dagvm_dagvm_proto_msgTypes,
	}.Build()
	File_dagvm_dagvm_proto = out.File
	file_dagvm_dagvm_proto_rawDesc = nil
	file_dagvm_dagvm_proto_goTypes = nil
	file_dagvm_dagvm_proto_depIdxs = nil
}
